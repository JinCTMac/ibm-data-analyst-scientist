Lab 1 Cheatsheet

Executing code:
  On Mac, execute using Control + Enter.
  print("hello world lmao")

Writing comments:
  In Python, using # for commenting. Or just run Command + / to comment out highlighted code.
  # this is a comment

Interpreted language:
  Python is an interpreted language, or scripting language, and executes code line-by-line, so when it encounters an error, it will stop there and all lines of code past the line where the error occurred will not be executed, unless you tell it not to stop.
  print("this will print")
  print("this will fail because lack of second speech marks)
  print("this will not print")

Objects and types:
  Python is an object oriented language, hence all types you work with in Python are objects of that type class. We can check the type of any variable or raw value using the type() method, which simply returns the type of that variable or value.

  type(12.0) => will return float

  Types include:
    Int - represents a whole number, can be positive or negative
    Float - represents a real number, any whole number can be made a float by adding .0 to the end i.e. 12.0
    String - letters and words
    Boolean - true or false

Typecasting:
  We can change the type of an object in Python using typecasting, which is as simple as calling the type name you want to change to and the value which you want to change the type of. Note this doesn't work well with certain types, such as turning a float into an int.

  float(2) => will return 2.0

  We can also turn a string into an integer, if the string matches an integer value.

  int("1") => will return 1

Expressions:
  Instructions that contain variables and operators.

  Operators include:
  +
  -
  /
  // (floor/integer division, different from division above in that it always returns an integer)

Variables:
  We assign variables simply in Python just using var_name = var_value, with no need for semicolons or defining variable type beforehand unlike in C++/Java/JS.

  To show the value of a variable, just type that variable name and execute.

  x = 43 + 60
  x => will return 103
