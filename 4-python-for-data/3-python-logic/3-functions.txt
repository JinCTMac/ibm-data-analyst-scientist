Functions

Python has built in functions, but we can create our own as well. Functions are reusable blocks of code that take an input and produce an output.

Function definition:
  def doubleFunc(param):
    # multiplies input parameter (int) by 2
    return param * 2

  We usually write in comments a comment as documentation for what the function does.

  # First function example: Add 1 to a and store as b

  def add(a):
      """
      add 1 to a
      """
      b = a + 1
      print(a, "if you add one", b)
      return(b)

  To read that documentation, we can use the help() method.

  help(add) => will return the comments written in documentation

  If your function doesn't have a return statement, you can treat it as not returning anything at all, although Python in the background produces a None object. This means the two functions below are the same.

  def MJ():
      print('Michael Jackson')

  def MJ1():
      print('Michael Jackson')
      return(None)

  We can use the keyword pass in a function to ensure that a function always has a body, even if you don't want the function to do anything.

  def ok():
    pass
  print("function does nothing")

  We can use iteration in functions.

  def printAlbums(list):
    for i, name in list:
      print("Album", i, "Song", name)

  # Print the list using for loop
  def PrintList(the_list):
      for element in the_list:
          print(element)

Built-in functions:
  Common built in functions include:
    len() - takes a sequence or collection like a list/array, dictionary, tuple, etc and returns the length, or number of items, in that sequence or collection
    sum() - takes an iterable and returns the total of the value of the elements in the iterable, like a list
    sorted() - the sorted function returns a NEW list or tuple, sorted from the original
    sort() - similar to sorted(), but it modifies the input iterable instead, so the original list or tuple changes

Scope:
  Variables defined outside of a function are said to be in the global scope, and they can be accessed after they are defined. If they are within a function, they are called local variables, and only exist within the function call. We cannot access a local variable in the global scope.

Default parameters in functions:
  We can set default parameters in our functions for if parameters are not input.

  # Example for setting param with default value
  def isGoodRating(rating=4):
      if(rating < 7):
          print("this album sucks it's rating is",rating)

      else:
          print("this album is good its rating is",rating)
